.\"	$Id$
.\"
.\" Copyright (c) 2014, 2017 Kristaps Dzonsons <kristaps@bsd.lv>
.\" Copyright (c) 2017 Ingo Schwarze <schwarze@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt KHTTP_BODY 3
.Os
.Sh NAME
.Nm khttp_body ,
.Nm khttp_body_compress
.Nd close the HTTP header sequence for kcgi
.Sh LIBRARY
.Lb libkcgi
.Sh SYNOPSIS
.In sys/types.h
.In stdarg.h
.In stdint.h
.In kcgi.h
.Ft enum kcgi_err
.Fo khttp_body
.Fa "struct kreq *req"
.Fc
.Ft int
.Fo khttp_body_compress
.Fa "struct kreq *req"
.Fa "int compress"
.Fc
.Sh DESCRIPTION
The
.Fn khttp_body
and
.Fn khttp_body_compress
functions terminate the zero or more
.Xr khttp_head 3
calls for a
.Xr kcgi 3
context
.Fa req .
After these functions, invoking
.Xr khttp_head 3
or invoking
.Fn khttp_body
or
.Fn khttp_body_compress
again results in undefined behaviour.
.Pp
The
.Fa compress
argument enables or disables compression as follows:
.Bl -tag -width Ds
.It >0
Check whether the
.Dq Accept-Encoding
request header specified
.Dq gzip
with a non-zero or empty q-value.
If so, emit the appropriate
.Dq Content-Encoding
header and try to enable write compression.
Calling
.Fn khttp_body
also selects this auto-compression behaviour.
.It 0
Do not check for the request header and do not emit
.Dq Content-Encoding ,
but try to enable write compression anyway.
This is useful for applications that write the
.Dq Content-Encoding
header themselves and want to explicitly stipulate output compression.
.It <0
Simply open the document body: do not fiddle with compression at all.
This is useful if the application requires complete control over the
output stream.
Calls to
.Xr khttp_write 3
will be uncompressed.
.El
.Pp
If
.Xr kcgi 3
is not built with
.Xr zlib 3
support, compression is never enabled regardless the argument to
.Fn khttp_body_compress .
If
.Xr zlib 3
fails when enabling compression, the error is reported and compression
is disabled.
.Sh RETURN VALUES
The
.Fn khttp_body
function returns an
.Ft enum kcgi_err
indicating the error state:
.Dv KCGI_OK
for no error,
.Dv KCGI_ENOMEM
for an internal memory allocation failure, and
.Dv KCGI_SYSTEM
for an internal system error writing to the output stream.
.Pp
The
.Fn khttp_body_compress
function returns non-zero if subsequent calls to
.Xr khttp_write 3
and similar functions will use compression, or 0 otherwise.
.Sh EXAMPLES
Write out an HTTP header sequence and text content with automatic
compression detection.
Assume that
.Fa r
is a context initialized by
.Xr khttp_parse 3 .
.Bd -literal
khttp_head(r, kresps[KRESP_STATUS],
  "%s", khttps[KHTTP_200]);
khttp_head(r, kresps[KRESP_CONTENT_TYPE],
  "%s", kmimetypes[KMIME_TEXT_PLAIN]);
khttp_body(r);
khttp_puts(r, "Hello, world!\en");
.Ed
.Pp
To do the same, but explicitly disabling compression:
.Bd -literal
khttp_head(r, kresps[KRESP_STATUS],
  "%s", khttps[KHTTP_200]);
khttp_head(r, kresps[KRESP_CONTENT_TYPE],
  "%s", kmimetypes[KMIME_TEXT_PLAIN]);
khttp_body_compress(r, -1);
khttp_puts(r, "Hello, world!\en");
.Ed
.Sh SEE ALSO
.Xr kcgi 3 ,
.Xr khttp_head 3 ,
.Xr zlib 3
.Sh AUTHORS
The
.Fn khttp_body
function was written by
.An Kristaps Dzonsons Aq Mt kristaps@bsd.lv .
