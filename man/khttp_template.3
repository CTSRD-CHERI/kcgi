.\"	$Id$
.\"
.\" Copyright (c) 2014, 2017, 2018 Kristaps Dzonsons <kristaps@bsd.lv>
.\" Copyright (c) 2018 Ingo Schwarze <schwarze@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt KHTTP_TEMPLATE 3
.Os
.Sh NAME
.Nm khttp_template ,
.Nm khttp_templatex ,
.Nm khttp_template_buf ,
.Nm khttp_templatex_buf ,
.Nm khttp_template_fd ,
.Nm khttp_templatex_fd
.Nd emit filled-in templates for kcgi
.Sh LIBRARY
.Lb libkcgi
.Sh SYNOPSIS
.In sys/types.h
.In stdarg.h
.In stdint.h
.In kcgi.h
.Ft enum kcgi_err
.Fo khttp_template
.Fa "struct kreq *req"
.Fa "const struct ktemplate *t"
.Fa "const char *filename"
.Fc
.Ft enum kcgi_err
.Fo khttp_templatex
.Fa "const struct ktemplate *t"
.Fa "const char *filename"
.Fa "const struct ktemplatex *tx"
.Fa "void *arg"
.Fc
.Ft enum kcgi_err
.Fo khttp_template_buf
.Fa "struct kreq *req"
.Fa "const struct ktemplate *t"
.Fa "const char *buf"
.Fa "size_t sz"
.Fc
.Ft enum kcgi_err
.Fo khttp_templatex_buf
.Fa "const struct ktemplate *t"
.Fa "const char *buf"
.Fa "size_t sz"
.Fa "const struct ktemplatex *tx"
.Fa "void *arg"
.Fc
.Ft enum kcgi_err
.Fo khttp_template_fd
.Fa "struct kreq *req"
.Fa "const struct ktemplate *t"
.Fa "int fd"
.Fa "const char *filename"
.Fc
.Ft enum kcgi_err
.Fo khttp_templatex_fd
.Fa "const struct ktemplate *t"
.Fa "int fd"
.Fa "const char *filename"
.Fa "const struct ktemplatex *tx"
.Fa "void *arg"
.Fc
.Sh DESCRIPTION
These template functions write a block of HTTP output,
replacing certain substrings with variable content.
They operate in a
.Xr kcgi 3
context
.Fa req
allocated with
.Xr khttp_parse 3
or
.Xr khttp_fcgi_parse 3
and may only be called after
.Xr khttp_body 3 .
.Pp
All template functions accept a
.Fa "const struct ktemplate *t"
argument consisting of the following fields:
.Bl -tag -width Ds
.It Fa "const char *const *key"
An array of keys to be replaced in the template.
.It Fa "size_t keysz"
The number of keys in
.Fa t->key .
.It Fa "void *arg"
An optional argument passed to
.Fa t->cb .
.It Fa "int (*cb)(size_t index, void *arg)"
The callback function invoked when a key at position
.Fa index ,
which is always less than
.Fa t->keysz ,
is found in
.Fa t->key .
The optional
.Fa arg
is passed to the current writing function.
This callback function normally uses
.Xr khttp_write 3
or
.Fa tx->writer
to write data.
.El
.Pp
The
.Fn khttp_template ,
.Fn khttp_template_fd ,
and
.Fn khttp_template_buf
functions use
.Xr khttp_write 3
as the current writing function.
.Pp
The
.Fn khttp_templatex ,
.Fn khttp_templatex_buf ,
and
.Fn khttp_templatex_fd
functions extend this behaviour with an additional
.Fa "const struct ktemplatex *tx"
argument having the following fields:
.Bl -tag -width Ds
.It Fa "enum kcgi_err (*writer)(const char *b, size_t sz, void *arg)"
Sets the current writing function that writes
.Fa sz
bytes pointed to by
.Fa b .
The
.Fa arg
argument is as passed to the function; it may be
.Dv NULL .
Any return value but
.Dv KCGI_OK
is considered an error.
.It Fa "int (*fbk)(const char *k, size_t sz, void *arg)"
If an encountered key
.Fa k
of length
.Fa sz
is not found in
.Fa t->key ,
this function is invoked.
The field
.Fa t->arg
is passed as the
.Fa arg .
This function normally uses the writing function in
.Fa tx->writer
to write data.
.El
.Pp
The
.Fa tx->writer
callback may not be
.Dv NULL .
.Pp
The functions
.Fn khttp_template
and
.Fn khttp_templatex
open
.Fa filename
in read-only mode and call the descriptor functions.
.Pp
The descriptor functions
.Fn khttp_template_fd
and
.Fn khttp_templatex_fd
read the template from the open file descriptor
.Fa fd
using
.Xr mmap 2
and call the buffer functions.
They only use the
.Fa filename
for error reporting.
If it is
.Dv NULL ,
.Qq <unknown descriptor>
is used.
.Pp
The buffer functions
.Fn khttp_template_buf
and
.Fn khttp_templatex_buf
read the template from the buffer
.Fa buf
of length
.Fa sz .
If
.Fa sz
is 0, the template is considered empty and
.Fa buf
is ignored.
.Pp
Each substring of the template buffer beginning and ending with a pair
of
.Dq at
signs,
.Cm @@ Ns Ar key Ns Cm @@ ,
is called a
.Dq key sequence .
If the
.Ar key
is found in
.Fa t->key ,
the callback
.Fa t->cb
is invoked.
Otherwise, the fallthrough callback
.Fa tx->fbk
is invoked if it is not
.Dv NULL .
Otherwise, the key sequence is passed unchanged to the current writing
function.
.Pp
If
.Fa t
is
.Dv NULL ,
the whole template is passed through without any processing.
.Sh RETURN VALUES
These functions return an
.Ft enum kcgi_err
indicating the error state:
.Bl -tag -width KCGI_SYSTEM
.It Dv KCGI_OK
No error occurred.
.It Dv KCGI_ENOMEM
Memory allocation failed.
.It Dv KCGI_SYSTEM
A system call failed.
For example, writing to the output stream failed, or
.Fn khttp_template
or
.Fn khttp_templatex
failed to
.Xr open 2
.Fa filename .
.It Dv KCGI_FORM
.Fa t->cb
or
.Fa tx->fbk
returned 0.
.El
.Pp
An empty template produces no output, and
.Dv KCGI_OK
is returned.
.Sh SEE ALSO
.Xr kcgi 3 ,
.Xr khttp_body 3 ,
.Xr khttp_parse 3 ,
.Xr khttp_write 3
.Sh AUTHORS
These functions were written by
.An Kristaps Dzonsons Aq Mt kristaps@bsd.lv .
.Sh CAVEATS
The
.Fn khttp_template
and
.Fn khttp_templatex
functions need access to the file system.
Read the files before entering a sandbox and use the buffer or file
descriptor versions instead.
